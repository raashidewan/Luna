package org.firstinspires.ftc.teamcode.sensor_methods;

/**
 * Created by Raashi Dewan on 7/18/2017.
 */
import com.qualcomm.hardware.modernrobotics.ModernRoboticsDigitalTouchSensor;
import com.qualcomm.robotcore.eventloop.opmode.Disabled;
//import com.qualcomm.robotcore.hardware.TouchSensor;
import com.qualcomm.robotcore.eventloop.opmode.Autonomous;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DigitalChannelController;
import com.qualcomm.robotcore.hardware.Servo;
import com.qualcomm.robotcore.util.ElapsedTime;
import com.qualcomm.robotcore.hardware.HardwareMap;

@Autonomous(name = "Touch Test", group = "Sensors")
public class touch extends LinearOpMode{

    /* Public OpMode members. */
    public DcMotor leftMotor   = null;
    public DcMotor  rightMotor  = null;
    public ModernRoboticsDigitalTouchSensor touch = null;
    public ModernRoboticsDigitalTouchSensor touch2 = null;

    public void runOpMode(){
        leftMotor = hardwareMap.dcMotor.get("left_drive");
        rightMotor = hardwareMap.dcMotor.get("right_drive");

        //check if motors are AndyMark, if not reverse directions
        leftMotor.setDirection(DcMotor.Direction.FORWARD);
        rightMotor.setDirection(DcMotor.Direction.REVERSE);

        // Set all motors to zero power
        leftMotor.setPower(0);
        rightMotor.setPower(0);

        // Set all motors to run without encoders.
        // May want to use RUN_USING_ENCODERS if encoders are installed.
        leftMotor.setMode(DcMotor.RunMode.RUN_WITHOUT_ENCODER);
        rightMotor.setMode(DcMotor.RunMode.RUN_WITHOUT_ENCODER);

        touch = (ModernRoboticsDigitalTouchSensor)hardwareMap.touchSensor.get("touch");
        touch2 = (ModernRoboticsDigitalTouchSensor)hardwareMap.touchSensor.get(("touch2"));

        double value = 0.0;
        double val2 = 0.0;

        waitForStart();

        while(opModeIsActive()){
            value = touch.getValue();
            val2 = touch2.getValue();
            telemetry.addData("Value: ", value);
            telemetry.addData("Value 2: ", val2);
            telemetry.update();
        }
    }

}
